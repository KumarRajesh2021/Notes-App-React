{"version":3,"sources":["Utils/localStorage.js","statemanagement/index.js","components/NotesList/styles.js","components/NotesList/Note.js","components/NotesList/index.js","components/NoteBooks/styles.js","components/NoteBooks/index.js","components/CreateNote/styles.js","components/CreateNote/Snackbar.js","components/CreateNote/index.js","Utils/Modal.js","Utils/ShowModal.js","components/MainComponent/styles.js","components/MainComponent/index.js","App.js","index.js"],"names":["LocalStorage","key","localStorage","getItem","value","setItem","removeItem","get","notebook","set","remove","notebok","id","getNotes","JSON","parse","object","List","length","filter","item","Personal","getNotebooks","College","Home","Notes","getAllNotes","itemObject","notebookIs","updatedList","title","message","category","stringify","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","useReducer","useStateValue","useContext","notes","modal","edit","show","showModal","state","action","type","useNoteStyles","makeStyles","theme","paper","padding","spacing","color","palette","text","secondary","marginBottom","button","position","top","wordBreak","paddingBottom","useListStyles","root","flexGrow","margin","marginTop","textField","marginLeft","marginRight","formControl","width","moveToSelect","backgroundColor","Note","props","row","React","useState","checkbox","setCheckbox","classes","useStyles","dispatch","Paper","className","Grid","container","Checkbox","checked","onChange","inputProps","Divider","variant","ButtonGroup","aria-label","Button","onClick","NoteBookOfTheNote","getObjectsOfTheNoteBook","removeNote","note","rmNoteBook","NotesList","mainData","setMainData","setState","notebookDropDown","setNotebookDropDown","stateCategory","setStateCategory","checkboxes","setCheckboxes","searchFor","keyword","array","toSearch","toLowerCase","data","undefined","includes","searchCategory","param","target","searched","handleCheckbox","index","indexOf","splice","useEffect","Fragment","Typography","align","gutterBottom","noWrap","TextField","label","placeholder","fullWidth","e","event","search","InputProps","endAdornment","InputAdornment","join","FormControl","InputLabel","htmlFor","Select","disabled","native","NoteBookName","map","findId","allNodesObject","allNodes","push","labelWidth","name","size","noteBooksContainer","minHeight","noteBookList","cursor","active","NoteBooks","activeNote","setActiveNote","showNotesOf","Notebook","All","demo","dense","ListItem","ListItemAvatar","Avatar","ListItemText","primary","display","flexWrap","menu","snackBarStyle","close","CustomSnackbar","setClose","openSnack","open","setOpen","handleClose","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","IconButton","CreateNote","inputLabel","useRef","setLabelWidth","openSnackbar","setOpenSnackbar","handleChange","Date","getTime","current","offsetWidth","ref","multiline","rows","rowExists","setNotes","ModalBase","Dialog","aria-labelledby","DialogTitle","DialogContent","updateId","findItem","ShowModal","source","escapeHtml","MainComponent","xs","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b952208a.chunk.js","sourcesContent":["const LocalStorage = {};\n\nLocalStorage.get = key => {\n  return localStorage.getItem(key);\n};\nLocalStorage.set = (key, value) => {\n  return localStorage.setItem(key, value);\n};\nLocalStorage.remove = key => {\n  return localStorage.removeItem(key);\n};\n/**\n * get all notes\n **/\nLocalStorage.getNotes = () => {\n  return LocalStorage.get(\"notes\");\n};\n\n/**\n * get all notes of notebooks\n **/\nLocalStorage.getNotebooks = notebook => {\n  return LocalStorage.get(notebook);\n};\n\n/**\n * set a group of Notes\n **/\nLocalStorage.setNotes = value => {\n  LocalStorage.set(\"notes\", value);\n};\n\n/**\n * remove Notes\n **/\nLocalStorage.rmNotes = () => {\n  LocalStorage.remove(\"notes\");\n};\n\n/**\n * remove Notes\n **/\nLocalStorage.rmNoteBook = notebok => {\n  LocalStorage.remove(notebok);\n};\n\n/**\n * get a note by index\n **/\nLocalStorage.note = id => {\n  if (LocalStorage.getNotes() !== null) {\n    const List = JSON.parse(LocalStorage.getNotes());\n    return List[id];\n  }\n  return [];\n};\n\n/**\n * check that note exists by id\n **/\nLocalStorage.rowExists = object => {\n  const List = JSON.parse(LocalStorage.getNotes());\n  if (List !== null && List.length > 0) {\n    return List.filter(item => {\n      return object.id === item.id;\n    });\n  } else {\n    return [];\n  }\n};\n\n/**\n * check that note exists by id in specific notebook\n **/\nLocalStorage.rowExistsIn = (notebook, object) => {\n  const List = JSON.parse(localStorage.getItem(notebook));\n  if (List !== null && List.length > 0) {\n    return List.filter(item => {\n      return object.id === item.id;\n    });\n  } else {\n    return [];\n  }\n};\nLocalStorage.getAllNotes = () => {\n  let Personal = LocalStorage.getNotebooks(\"Personal\");\n  let College = LocalStorage.getNotebooks(\"College\");\n  let Home = LocalStorage.getNotebooks(\"Home\");\n  let Notes = LocalStorage.getNotebooks(\"notes\");\n  let All;\n  Personal = Personal !== null ? JSON.parse(Personal) : [];\n  College = College !== null ? JSON.parse(College) : [];\n  Home = Home !== null ? JSON.parse(Home) : [];\n  Notes = Notes !== null ? JSON.parse(Notes) : [];\n  All = [...Personal, ...College, ...Home, ...Notes];\n\n  return All;\n};\n/**\n * get node by id\n **/\nLocalStorage.findId = id => {\n  const List = LocalStorage.getAllNotes();\n  if (List !== null && List.length > 0) {\n    return List.filter(item => {\n      return id === item.id;\n    });\n  } else {\n    return [];\n  }\n};\n\n/**\n * update a note by id\n **/\nLocalStorage.updateId = (id, itemObject) => {\n  const List = JSON.parse(\n    LocalStorage.getNotebooks(\n      itemObject.notebook === \"\" ? \"notes\" : itemObject.notebook\n    )\n  );\n\n  let notebookIs = itemObject.notebook;\n  if (List !== null && List.length > 0) {\n    const updatedList = List.filter(item => {\n      if (id === item.id) {\n        const { title, message, category } = itemObject;\n        item.title = title;\n        item.message = message;\n        item.category = category;\n      }\n      return item;\n    });\n    LocalStorage.set(\n      notebookIs === \"\" ? \"notes\" : notebookIs,\n      JSON.stringify(updatedList)\n    );\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default LocalStorage;\n","import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n\nexport const initialState = {\n  notes: [],\n  modal: false,\n  edit: null,\n  show: null,\n  showModal: false\n};\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case \"newNote\":\n      return {\n        ...state,\n        notes: action.notes\n      };\n    case \"openModal\":\n      return {\n        ...state,\n        modal: action.modal,\n        edit: action.edit\n      };\n    case \"showMessage\":\n      return {\n        ...state,\n        showModal: action.showModal,\n        show: action.show\n      };\n\n    default:\n      return state;\n  }\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useNoteStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2) * 2,\n    color: theme.palette.text.secondary,\n    marginBottom: 10\n  },\n  button: {\n    position: \"relative\",\n    top: \"10px\"\n  },\n  title: {\n    wordBreak: \"break-all\",\n    paddingBottom: 10\n  }\n}));\n\nexport const useListStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2) * 2,\n    color: theme.palette.text.secondary,\n    marginBottom: 10\n  },\n  margin: {\n    marginTop: 8\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  formControl: {\n    marginTop: theme.spacing(1) + \"px !important\",\n    marginBottom: theme.spacing(1) + \"px !important\",\n    width: \"100% !important\"\n  },\n  moveToSelect: {\n    backgroundColor: \"#ccc !important\",\n    color: \"#333 !important\"\n  }\n}));\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport LocalStorage from \"../../Utils/localStorage\";\nimport { useStateValue } from \"../../statemanagement\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useNoteStyles as useStyles } from \"./styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nfunction Note(props) {\n  const { item, row } = props;\n  const { id, title, category } = item;\n  const [checkbox, setCheckbox] = React.useState(false);\n  const classes = useStyles();\n  const [, dispatch] = useStateValue();\n\n  function handleChangeCheckBox() {\n    setCheckbox(!checkbox);\n    props.setCheckbox(!checkbox, id);\n  }\n\n  function deleteNote() {\n    const NoteBookOfTheNote = item.notebook;\n    let getObjectsOfTheNoteBook = JSON.parse(\n      LocalStorage.getNotebooks(NoteBookOfTheNote)\n    );\n    if (getObjectsOfTheNoteBook === null) {\n      getObjectsOfTheNoteBook = JSON.parse(LocalStorage.getNotes());\n    }\n\n    let removeNote = getObjectsOfTheNoteBook.filter(\n      note => note.id !== item.id\n    );\n    LocalStorage.rmNoteBook(\n      NoteBookOfTheNote === \"\" ? \"notes\" : NoteBookOfTheNote\n    );\n    LocalStorage.set(\n      NoteBookOfTheNote === \"\" ? \"notes\" : NoteBookOfTheNote,\n      JSON.stringify(removeNote)\n    );\n\n    dispatch({ type: \"newNote\", notes: removeNote });\n  }\n\n  function updateNote() {\n    dispatch({ type: \"openModal\", modal: true, edit: id });\n  }\n\n  function showNote() {\n    dispatch({ type: \"showMessage\", showModal: true, show: id });\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      <Grid container>\n        <div className={title}>\n          <Checkbox\n            checked={checkbox}\n            onChange={handleChangeCheckBox}\n            value=\"checkedA\"\n            inputProps={{\n              \"aria-label\": \"primary checkbox\"\n            }}\n          />\n          {row + 1}- {title}({category})\n        </div>\n      </Grid>\n      <Divider variant=\"middle\" />\n      <Grid container>\n        <ButtonGroup\n          color=\"primary\"\n          aria-label=\"outlined primary button group\"\n          className={classes.button}\n        >\n          <Button variant=\"outlined\" color=\"secondary\" onClick={deleteNote}>\n            Delete\n          </Button>\n          <Button variant=\"outlined\" color=\"primary\" onClick={updateNote}>\n            Update\n          </Button>\n          <Button variant=\"outlined\" color=\"primary\" onClick={showNote}>\n            Show\n          </Button>\n        </ButtonGroup>\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default Note;\n","import React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Note from \"./Note\";\nimport { useStateValue } from \"../../statemanagement\";\nimport LocalStorage from \"../../Utils/localStorage\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { useListStyles as useStyles } from \"./styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nfunction NotesList() {\n  const classes = useStyles();\n  const [{ notes }, dispatch] = useStateValue();\n  const [mainData, setMainData] = useState([]);\n  const [state, setState] = useState(\"\");\n  const [notebookDropDown, setNotebookDropDown] = useState(\"\");\n  const [stateCategory, setStateCategory] = useState(\"\");\n  const [checkboxes, setCheckboxes] = useState([]);\n\n  /**\n   * Find the object with complexicity O(n2)\n   **/\n  function searchFor(keyword, key, array) {\n    const toSearch = keyword.toLowerCase();\n    return array.filter(data => {\n      return data[key]!==undefined && data[key].toLowerCase().includes(toSearch)\n    });\n  }\n\n  /**\n   * Handle Search in titles\n   **/\n  function search(event) {\n    const value = event.target.value;\n    setState(value);\n    setStateCategory(\"\");\n    const searched = searchFor(value, \"title\", notes);\n    if (searched.length > 0) {\n      setMainData(searched);\n    }\n    if (value.length === 0) {\n      setMainData(notes);\n    }\n  }\n\n  /**\n   * Handle Search in categories\n   **/\n  function searchCategory(param) {\n    const target = param.target;\n    const value = target !== undefined ? target.value : param;\n    setState(\"\");\n    setStateCategory(value);\n    const searched = searchFor(value, \"category\", notes);\n    if (searched.length > 0) {\n      setMainData(searched);\n    }\n    if (searched.length === 0) {\n      setMainData([]);\n    }\n  }\n\n  /**\n   * handle check boxes to move into note books\n   **/\n  function handleCheckbox(state, id) {\n    if (state) {\n      setCheckboxes([...checkboxes, id]);\n    } else {\n      const index = checkboxes.indexOf(id);\n      checkboxes.splice(index, 1);\n      if (checkboxes.length === 0) {\n        setCheckboxes([]);\n      } else {\n        setCheckboxes(checkboxes);\n      }\n    }\n  }\n\n  /**\n   * Handle Move notes to another notebook\n   **/\n  function handleMoveNotes(e) {\n    const NoteBookName = e.target.value;\n\n    //step 1- remove Notes from current NoteBook\n    checkboxes.map(item => {\n      //push items before remove and create a clone\n      const Note = LocalStorage.findId(item)[0];\n      const NoteBookOfTheNote = Note.notebook;\n      const getObjectsOfTheNoteBook = JSON.parse(\n        LocalStorage.getNotebooks(\n          NoteBookOfTheNote === \"\" ? \"notes\" : NoteBookOfTheNote\n        )\n      );\n\n      let removeNote = getObjectsOfTheNoteBook.filter(\n        note => note.id !== Note.id\n      );\n      LocalStorage.rmNoteBook(\n        NoteBookOfTheNote === \"\" ? \"notes\" : NoteBookOfTheNote\n      );\n      LocalStorage.set(\n        NoteBookOfTheNote === \"\" ? \"notes\" : NoteBookOfTheNote,\n        JSON.stringify(removeNote)\n      );\n\n      //step 2- move to new NoteBook\n      let allNodesObject = [];\n      const allNodes = LocalStorage.getNotebooks(NoteBookName);\n      allNodesObject = allNodes !== null ? JSON.parse(allNodes) : [];\n      Note.notebook = NoteBookName;\n      //if Notebook is empty , we have to initial firs object\n      if (allNodesObject.length === 0) {\n        allNodesObject = [Note];\n      } else {\n        //so push into it\n        allNodesObject.push(Note);\n      }\n\n      LocalStorage.set(NoteBookName, JSON.stringify(allNodesObject));\n\n      //step 3- res dispatch current NoteBook witn nre Note list and disable Move\n      setCheckboxes([]);\n      setNotebookDropDown(\"\");\n      dispatch({\n        type: \"newNote\",\n        notes: allNodesObject\n      });\n\n      //  Notes.push(Note);\n      return true;\n    });\n  }\n\n  React.useEffect(() => {\n    setMainData(notes);\n  }, [notes]);\n\n  return (\n    <React.Fragment>\n      <Typography\n        variant=\"h5\"\n        align=\"center\"\n        color=\"primary\"\n        gutterBottom\n        noWrap\n      >\n        Notes\n      </Typography>\n\n      <TextField\n        value={state}\n        id=\"outlined-textarea\"\n        label=\"search\"\n        placeholder=\"search title of note\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"outlined\"\n        fullWidth\n        onChange={e => search(e)}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <SearchIcon />\n            </InputAdornment>\n          )\n        }}\n      />\n\n      <TextField\n        value={stateCategory}\n        id=\"outlined-textarea\"\n        label=\"search category\"\n        placeholder=\"search for category\"\n        className={[classes.textField, classes.margin].join(\" \")}\n        margin=\"normal\"\n        variant=\"outlined\"\n        fullWidth\n        onChange={searchCategory}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <SearchIcon />\n            </InputAdornment>\n          )\n        }}\n      />\n\n      <FormControl fullWidth variant=\"outlined\" className={classes.formControl}>\n        <InputLabel htmlFor=\"outlined-Notebook-native-simple\">\n          Move to\n        </InputLabel>\n        <Select\n          classes={{ disabled: classes.moveToSelect }}\n          disabled={checkboxes.length === 0}\n          native\n          onChange={handleMoveNotes}\n          value={notebookDropDown}\n          labelWidth={60}\n          inputProps={{\n            name: \"Notebook\",\n            id: \"outlined-Notebook-native-simple\"\n          }}\n        >\n          <option value=\"\" />\n          <option value={\"Personal\"}>Personal</option>\n          <option value={\"College\"}>College</option>\n          <option value={\"Home\"}>Home</option>\n        </Select>\n      </FormControl>\n\n      <ButtonGroup\n        fullWidth\n        variant=\"text\"\n        color=\"secondary\"\n        size=\"large\"\n        aria-label=\"large contained secondary button group\"\n      >\n        <Button\n          color={stateCategory === \"\" ? \"secondary\" : \"primary\"}\n          onClick={() => searchCategory(\"\")}\n        >\n          All\n        </Button>\n        <Button\n          color={stateCategory === \"Confidential \" ? \"secondary\" : \"primary\"}\n          onClick={() => searchCategory(\"Confidential \")}\n        >\n          Confidential \n        </Button>\n        <Button\n          color={stateCategory === \"Work\" ? \"secondary\" : \"primary\"}\n          onClick={() => searchCategory(\"Work\")}\n        >\n          Work\n        </Button>\n        <Button\n          color={stateCategory === \"General\" ? \"secondary\" : \"primary\"}\n          onClick={() => searchCategory(\"General\")}\n        >\n          General\n        </Button>\n      </ButtonGroup>\n      <div className={classes.margin}>\n        {mainData.length > 0 &&\n          mainData.map((item, index) => (\n            <Note\n              setCheckbox={handleCheckbox}\n              row={index}\n              item={item}\n              key={item.id}\n            />\n          ))}\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default NotesList;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useListStyles = makeStyles(theme => ({\n  noteBooksContainer: {\n    backgroundColor: \"#f6f6f6\",\n    minHeight: \"100%\"\n  },\n  noteBookList: {\n    cursor: \"pointer\"\n  },\n  active: {\n    backgroundColor: \"#ccc\"\n  }\n}));\n","import React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useStateValue } from \"../../statemanagement\";\nimport { useListStyles as useStyles } from \"./styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport LocalStorage from \"../../Utils/localStorage\";\n\nfunction NoteBooks() {\n  const classes = useStyles();\n  const [activeNote, setActiveNote] = useState(\"all\");\n  const [, dispatch] = useStateValue();\n\n  /**\n   * display a list of notes of a notebook and dispatch it into Context\n   **/\n  function showNotesOf(Notebook) {\n    let Personal = LocalStorage.getNotebooks(\"Personal\");\n    let College = LocalStorage.getNotebooks(\"College\");\n    let Home = LocalStorage.getNotebooks(\"Home\");\n    let Notes = LocalStorage.getNotebooks(\"notes\");\n    setActiveNote(Notebook);\n    if (Notebook === \"all\") {\n      let All;\n      Personal = Personal !== null ? JSON.parse(Personal) : [];\n      College = College !== null ? JSON.parse(College) : [];\n      Home = Home !== null ? JSON.parse(Home) : [];\n      Notes = Notes !== null ? JSON.parse(Notes) : [];\n      All = [...Personal, ...College, ...Home, ...Notes];\n      if (All.length > 0) {\n        dispatch({ type: \"newNote\", notes: All });\n      }\n    } else {\n      let Notes;\n      if (Notebook === \"Personal\") {\n        Notes = Personal;\n      }\n      if (Notebook === \"College\") {\n        Notes = College;\n      }\n      if (Notebook === \"Home\") {\n        Notes = Home;\n      }\n\n      Notes = Notes !== null ? JSON.parse(Notes) : [];\n      dispatch({ type: \"newNote\", notes: Notes });\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Typography\n        variant=\"h5\"\n        align=\"center\"\n        color=\"primary\"\n        gutterBottom\n        noWrap\n      >\n        Note Books\n      </Typography>\n\n      <div className={classes.noteBooksContainer}>\n        <div className={classes.demo}>\n          <List dense={false}>\n            <ListItem\n              className={[\n                classes.noteBookList,\n                activeNote === \"all\" && classes.active\n              ].join(\" \")}\n              onClick={() => showNotesOf(\"all\")}\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  <FolderIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"All\" />\n            </ListItem>\n\n            <ListItem\n              className={[\n                classes.noteBookList,\n                activeNote === \"Personal\" && classes.active\n              ].join(\" \")}\n              onClick={() => showNotesOf(\"Personal\")}\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  <FolderIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Personal\" />\n            </ListItem>\n\n            <ListItem\n              className={[\n                classes.noteBookList,\n                activeNote === \"College\" && classes.active\n              ].join(\" \")}\n              onClick={() => showNotesOf(\"College\")}\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  <FolderIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"College\" />\n            </ListItem>\n\n            <ListItem\n              className={[\n                classes.noteBookList,\n                activeNote === \"Home\" && classes.active\n              ].join(\" \")}\n              onClick={() => showNotesOf(\"Home\")}\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  <FolderIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Home\" />\n            </ListItem>\n          </List>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default NoteBooks;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  menu: {\n    width: 200\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    width: \"100%\"\n  }\n}));\n\nexport const snackBarStyle = makeStyles(theme => ({\n  close: {\n    padding: theme.spacing(0.5)\n  }\n}));\n","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { snackBarStyle as useStyles } from \"./styles\";\n\nexport default function CustomSnackbar(props) {\n  const classes = useStyles();\n  const { setClose, open: openSnack } = props;\n  const [open, setOpen] = React.useState();\n  /**\n   * set open/false state to show/hide Snackbar\n   **/\n  React.useEffect(() => {\n    setOpen(openSnack);\n  }, [openSnack]);\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n    setClose();\n  };\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\"\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        ContentProps={{\n          \"aria-describedby\": \"message-id\"\n        }}\n        message={<span id=\"message-id\">Note with this id exists</span>}\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={handleClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport LocalStorage from \"../../Utils/localStorage\";\nimport { useStateValue } from \"../../statemanagement\";\nimport { useStyles } from \"./styles\";\nimport CustomSnackbar from \"./Snackbar\";\n\nfunction CreateNote() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    id: 0,\n    category: \"\",\n    notebook: \"\",\n    message: \"\",\n    title: \"\"\n  });\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n  const [, dispatch] = useStateValue();\n\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n\n  /**\n   * handle change inputs\n   **/\n  function handleChange(name, event) {\n    setState({\n      ...state,\n      [name]: event.target.value,\n      id: new Date().getTime()\n    });\n  }\n\n  /**\n   * Add notes inside of localStorage and context api\n   **/\n  function addToNotes() {\n    //note book is not set, so set the Note in \"Note\" object\n    if (state.notebook === \"\") {\n      const allNodes = LocalStorage.getNotes();\n      let allNodesObject = allNodes !== null ? JSON.parse(allNodes) : [];\n      const rowExists = LocalStorage.rowExists(state);\n      if (rowExists.length === 0) {\n        setOpenSnackbar(false);\n        if (allNodesObject.length === 0) {\n          allNodesObject = [state];\n        } else {\n          allNodesObject.push(state);\n        }\n        LocalStorage.setNotes(JSON.stringify(allNodesObject));\n        dispatch({\n          type: \"newNote\",\n          notes: allNodesObject\n        });\n      } else {\n        setOpenSnackbar(true);\n      }\n    } else {\n      const allNodes = LocalStorage.getNotebooks(state.notebook);\n      let allNodesObject = allNodes !== null ? JSON.parse(allNodes) : [];\n      //set the note inside note book\n      const rowExists = LocalStorage.rowExists(state);\n      if (rowExists.length === 0) {\n        setOpenSnackbar(false);\n        if (allNodesObject.length === 0) {\n          allNodesObject = [state];\n        } else {\n          allNodesObject.push(state);\n        }\n        LocalStorage.set(state.notebook, JSON.stringify(allNodesObject));\n        dispatch({\n          type: \"newNote\",\n          notes: allNodesObject\n        });\n      } else {\n        setOpenSnackbar(true);\n      }\n    }\n  }\n\n  /**\n   * On component Did mount , send data from localStorage into context api\n   **/\n  React.useEffect(() => {\n    let All;\n    let Personal = LocalStorage.getNotebooks(\"Personal\");\n    let College = LocalStorage.getNotebooks(\"College\");\n    let Home = LocalStorage.getNotebooks(\"Home\");\n    let Notes = LocalStorage.getNotebooks(\"notes\");\n\n    Personal = Personal !== null ? JSON.parse(Personal) : [];\n    College = College !== null ? JSON.parse(College) : [];\n    Home = Home !== null ? JSON.parse(Home) : [];\n    Notes = Notes !== null ? JSON.parse(Notes) : [];\n    All = [...Personal, ...College, ...Home, ...Notes];\n    if (All.length > 0) {\n      dispatch({ type: \"newNote\", notes: All });\n    }\n  }, [dispatch]);\n\n  return (\n    <React.Fragment>\n      <Typography\n        variant=\"h5\"\n        align=\"center\"\n        color=\"primary\"\n        gutterBottom\n        noWrap\n      >\n        Add a new Note\n      </Typography>\n\n      <TextField\n        id=\"outlined-textarea\"\n        label=\"Title\"\n        placeholder=\"Write your title\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"outlined\"\n        fullWidth\n        onChange={e => handleChange(\"title\", e)}\n      />\n\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel ref={inputLabel} htmlFor=\"outlined-category-native-simple\">\n          Category\n        </InputLabel>\n        <Select\n          native\n          value={state.category}\n          onChange={e => handleChange(\"category\", e)}\n          labelWidth={labelWidth}\n          inputProps={{\n            name: \"category\",\n            id: \"outlined-category-native-simple\"\n          }}\n        >\n          <option value=\"\" />\n          <option value={\"Confidential \"}>Confidential </option>\n          <option value={\"Work\"}>Work</option>\n          <option value={\"General\"}>General</option>\n        </Select>\n      </FormControl>\n\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel ref={inputLabel} htmlFor=\"outlined-notebook-native-simple\">\n          Note Book\n        </InputLabel>\n        <Select\n          native\n          value={state.notebook}\n          onChange={e => handleChange(\"notebook\", e)}\n          labelWidth={labelWidth}\n          inputProps={{\n            name: \"notebook\",\n            id: \"outlined-notebook-native-simple\"\n          }}\n        >\n          <option value=\"\" />\n          <option value={\"Personal\"}>Personal</option>\n          <option value={\"College\"}>College</option>\n          <option value={\"Home\"}>Home</option>\n        </Select>\n      </FormControl>\n\n      <TextField\n        id=\"outlined-textarea\"\n        label=\"Message\"\n        placeholder=\"note\"\n        multiline\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"outlined\"\n        onChange={e => handleChange(\"message\", e)}\n        rows={10}\n        fullWidth\n      />\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        className={classes.button}\n        onClick={addToNotes}\n      >\n        Add Note\n      </Button>\n      <CustomSnackbar\n        open={openSnackbar}\n        setClose={() => setOpenSnackbar(false)}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default CreateNote;\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useStateValue } from \"../statemanagement\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LocalStorage from \"../Utils/localStorage\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  menu: {\n    width: 200\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    width: \"100%\"\n  }\n}));\n\nexport default function ModalBase() {\n  const [{ modal, edit }, dispatch] = useStateValue();\n  const inputLabel = React.useRef(null);\n  const [labelWidth] = React.useState(0);\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    category: \"\",\n    message: \"\",\n    title: \"\"\n  });\n\n  const handleClose = () => {\n    dispatch({ type: \"openModal\", modal: false });\n  };\n\n  function addToNotes() {\n    if (LocalStorage.updateId(edit, state)) {\n      dispatch({\n        type: \"newNote\",\n        notes: []\n      });\n      const findItem = LocalStorage.findId(edit)[0];\n      const allNodes = JSON.parse(\n        LocalStorage.getNotebooks(\n          findItem.notebook === \"\" ? \"notes\" : findItem.notebook\n        )\n      );\n\n      dispatch({\n        type: \"newNote\",\n        notes: allNodes\n      });\n      handleClose();\n    }\n  }\n\n  function handleChange(name, event) {\n    setState({\n      ...state,\n      [name]: event.target.value\n    });\n  }\n\n  React.useEffect(() => {\n    if (edit !== null) {\n      const rowExists = LocalStorage.findId(edit);\n      if (rowExists.length > 0) {\n        setState(rowExists[0]);\n      }\n    }\n  }, [edit]);\n\n  React.useEffect(() => {\n    return () => {\n      setState({ category: \"\", message: \"\", title: \"\" });\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Dialog\n        open={modal}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Edit Note</DialogTitle>\n        <DialogContent>\n          <TextField\n            value={state !== undefined && state.title}\n            id=\"outlined-textarea\"\n            label=\"Title\"\n            placeholder=\"Write your title\"\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth\n            onChange={e => handleChange(\"title\", e)}\n          />\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel ref={inputLabel} htmlFor=\"outlined-age-native-simple\">\n              Category\n            </InputLabel>\n            <Select\n              native\n              value={state !== undefined && state.category}\n              onChange={e => handleChange(\"category\", e)}\n              labelWidth={labelWidth}\n              inputProps={{\n                name: \"age\",\n                id: \"outlined-age-native-simple\"\n              }}\n            >\n              <option value=\"\" />\n              <option value={\"Confidential \"}>Confidential </option>\n              <option value={\"Work\"}>Work</option>\n              <option value={\"General\"}>General</option>\n            </Select>\n          </FormControl>\n\n          <TextField\n            value={state !== undefined && state.message}\n            id=\"outlined-textarea\"\n            label=\"Message\"\n            placeholder=\"note\"\n            multiline\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\"\n            onChange={e => handleChange(\"message\", e)}\n            rows={10}\n            fullWidth\n          />\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={addToNotes}\n          >\n            Edit Note\n          </Button>\n        </DialogContent>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useStateValue } from \"../statemanagement\";\nimport LocalStorage from \"../Utils/localStorage\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\n\nexport default function ShowModal() {\n  const [{ showModal, show }, dispatch] = useStateValue();\n  const [state, setState] = React.useState({\n    category: \"\",\n    message: \"\",\n    title: \"\"\n  });\n\n  const handleClose = () => {\n    dispatch({ type: \"showMessage\", showModal: false });\n  };\n\n  React.useEffect(() => {\n    const rowExists = LocalStorage.findId(show);\n    if (rowExists.length > 0) {\n      setState(rowExists[0]);\n    }\n  }, [show]);\n\n  React.useEffect(() => {\n    return () => {\n      setState({ category: \"\", message: \"\", title: \"\" });\n    };\n  }, [show]);\n\n  return (\n    <React.Fragment>\n      {state !== undefined && (\n        <Dialog\n          fullWidth\n          open={showModal}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">{state.title}</DialogTitle>\n          <DialogContent>\n            <Typography color={\"primary\"} variant=\"caption\">\n              category : {state.category}\n            </Typography>\n            <Divider />\n            <ReactMarkdown source={state.message} escapeHtml={false} />\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n    width: \"90%\",\n    margin: \"0 auto\",\n    marginTop: 100,\n    backgroundColor: \"#F9F6F4\",\n  }\n}));\n","import React from \"react\";\nimport NotesList from \"../NotesList\";\nimport NoteBooks from \"../NoteBooks\";\nimport CreateNote from \"../CreateNote\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { StateProvider, initialState, reducer } from \"../../statemanagement\";\nimport ModalBase from \"../../Utils/Modal\";\nimport ShowModal from \"../../Utils/ShowModal\";\nimport { useStyles } from \"./styles\";\n\nfunction MainComponent() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Paper className={classes.root}>\n        <Grid container spacing={3}>\n          <StateProvider initialState={initialState} reducer={reducer}>\n            <React.Fragment>\n              <ModalBase />\n              <ShowModal />\n              <Grid item xs={2}>\n                <NoteBooks />\n              </Grid>\n              <Grid item xs={5}>\n                <CreateNote />\n              </Grid>\n              <Grid item xs={5}>\n                <NotesList />\n              </Grid>\n            </React.Fragment>\n          </StateProvider>\n        </Grid>\n      </Paper>\n    </React.Fragment>\n  );\n}\n\nexport default MainComponent;\n","import React from \"react\";\nimport MainComponent from \"./components/MainComponent\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainComponent />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}